{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/src/components/Beers.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query BeersQuery {\\n    beers {\\n      abv\\n      available\\n      brewery\\n      ibu\\n      link\\n      name\\n      price\\n      ratings {\\n        name\\n        value\\n      }\\n      style\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment, useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport BeerItem from './BeerItem';\nimport axios from 'axios'; // const BEERS_QUERY = gql`\n//   query BeersQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {\n//     beers(first: $first, skip: $skip, orderBy: $orderBy) {\n//       abv\n//       available\n//       brewery\n//       ibu\n//       link\n//       name\n//       price\n//       ratings {\n//         name\n//         value\n//       }\n//       style\n//     }\n//   }\n// `\n\nvar BEERS_QUERY = gql(_templateObject());\n\nvar _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n\nvar _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n\nvar _useState5 = useState(1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentPage = _useState6[0],\n    setCurrentPage = _useState6[1];\n\nvar _useState7 = useState(10),\n    _useState8 = _slicedToArray(_useState7, 1),\n    postsPerPage = _useState8[0];\n\nuseEffect(function () {\n  var fetchPosts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return axios.get('https://jsonplaceholder.typicode.com/posts');\n\n            case 3:\n              res = _context.sent;\n              setPosts(res.data);\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchPosts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  fetchPosts();\n}, []); // const LINKS_PER_PAGE = 5\n\nconsole.log(posts);\n\nvar Beers = function Beers() {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 my-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Beers du Quebec \"), /*#__PURE__*/React.createElement(Query, {\n    query: BEERS_QUERY,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error,\n        data = _ref2.data;\n    if (loading) return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n    if (error) console.log(error);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, data.beers.map(function (beer) {\n      return /*#__PURE__*/React.createElement(BeerItem, {\n        key: beer.name,\n        beer: beer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      });\n    }));\n  }));\n}; // export class Beers extends Component {\n//   _forPafination = (store) => {\n//     const isNewPage = this.props.location.pathname.includes('new')\n//     const page = parseInt(this.props.match.params.page, 10)\n//     const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\n//     const first = isNewPage ? LINKS_PER_PAGE : 100\n//     const orderBy = isNewPage ? 'createdAt_DESC' : null\n//     const data = store.readQuery({\n//       query: BEERS_QUERY,\n//       variables: { first, skip, orderBy },\n//     })\n//     store.writeQuery({ query: BEERS_QUERY, data })\n//   }\n//   _getQueryVariables = () => {\n//     const page = parseInt(this.props.match.params.page, 10)\n//     const skip = (page - 1) * LINKS_PER_PAGE\n//     const first = LINKS_PER_PAGE\n//     const orderBy = 'createdAt_DESC'\n//     return { first, skip, orderBy }\n//   }\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1 className='display-4 my-3'>Beers du Quebec </h1>\n//         <Query query={BEERS_QUERY} variables={this._getQueryVariables}>\n//           {({ loading, error, data }) => {\n//             if (loading) return <h4>Loading...</h4>\n//             if (error) console.log(error)\n//             return (\n//               <Fragment>\n//                 {data.beers.map((beer) => (\n//                   <BeerItem\n//                     key={beer.name}\n//                     beer={beer}\n//                     forPafination={this._forPafination}\n//                   />\n//                 ))}\n//               </Fragment>\n//             )\n//           }}\n//         </Query>\n//       </Fragment>\n//     )\n//   }\n// }\n\n\nexport default Beers;","map":{"version":3,"sources":["/Users/jonhyun/Desktop/Dev/BeerMontreal/client/src/components/Beers.js"],"names":["React","Component","Fragment","useState","useEffect","gql","Query","BeerItem","axios","BEERS_QUERY","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","get","res","data","console","log","Beers","error","beers","map","beer","name"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAGJ,GAAH,mBAAjB;;gBAmB0BF,QAAQ,CAAC,EAAD,C;;IAA3BO,K;IAAOC,Q;;iBACgBR,QAAQ,CAAC,KAAD,C;;IAA/BS,O;IAASC,U;;iBACsBV,QAAQ,CAAC,CAAD,C;;IAAvCW,W;IAAaC,c;;iBACGZ,QAAQ,CAAC,EAAD,C;;IAAxBa,Y;;AAEPZ,SAAS,CAAC,YAAM;AACd,MAAMa,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBJ,cAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;AAAA,qBAECL,KAAK,CAACU,GAAN,CAAU,4CAAV,CAFD;;AAAA;AAEXC,cAAAA,GAFW;AAGjBR,cAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACAP,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVI,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAOAA,EAAAA,UAAU;AACX,CATQ,EASN,EATM,CAAT,C,CAWA;;AACAI,OAAO,CAACC,GAAR,CAAYZ,KAAZ;;AAEA,IAAMa,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEd,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAA8B;AAAA,QAA3BG,OAA2B,SAA3BA,OAA2B;AAAA,QAAlBY,KAAkB,SAAlBA,KAAkB;AAAA,QAAXJ,IAAW,SAAXA,IAAW;AAC7B,QAAIR,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIY,KAAJ,EAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEX,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAe,UAACC,IAAD;AAAA,0BACd,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,IAApB;AAA0B,QAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADc;AAAA,KAAf,CADH,CADF;AAOD,GAZH,CAHF,CADF;AAoBD,CArBD,C,CAuBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,KAAf","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport BeerItem from './BeerItem'\nimport axios from 'axios'\n\n// const BEERS_QUERY = gql`\n//   query BeersQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {\n//     beers(first: $first, skip: $skip, orderBy: $orderBy) {\n//       abv\n//       available\n//       brewery\n//       ibu\n//       link\n//       name\n//       price\n//       ratings {\n//         name\n//         value\n//       }\n//       style\n//     }\n//   }\n// `\n\nconst BEERS_QUERY = gql`\n  query BeersQuery {\n    beers {\n      abv\n      available\n      brewery\n      ibu\n      link\n      name\n      price\n      ratings {\n        name\n        value\n      }\n      style\n    }\n  }\n`\n\nconst [posts, setPosts] = useState([])\nconst [loading, setLoading] = useState(false)\nconst [currentPage, setCurrentPage] = useState(1)\nconst [postsPerPage] = useState(10)\n\nuseEffect(() => {\n  const fetchPosts = async () => {\n    setLoading(true)\n    const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\n    setPosts(res.data)\n    setLoading(false)\n  }\n\n  fetchPosts()\n}, [])\n\n// const LINKS_PER_PAGE = 5\nconsole.log(posts)\n\nconst Beers = () => {\n  return (\n    <Fragment>\n      <h1 className='display-4 my-3'>Beers du Quebec </h1>\n\n      <Query query={BEERS_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>Loading...</h4>\n          if (error) console.log(error)\n\n          return (\n            <Fragment>\n              {data.beers.map((beer) => (\n                <BeerItem key={beer.name} beer={beer} />\n              ))}\n            </Fragment>\n          )\n        }}\n      </Query>\n    </Fragment>\n  )\n}\n\n// export class Beers extends Component {\n//   _forPafination = (store) => {\n//     const isNewPage = this.props.location.pathname.includes('new')\n//     const page = parseInt(this.props.match.params.page, 10)\n\n//     const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\n//     const first = isNewPage ? LINKS_PER_PAGE : 100\n//     const orderBy = isNewPage ? 'createdAt_DESC' : null\n\n//     const data = store.readQuery({\n//       query: BEERS_QUERY,\n//       variables: { first, skip, orderBy },\n//     })\n\n//     store.writeQuery({ query: BEERS_QUERY, data })\n//   }\n\n//   _getQueryVariables = () => {\n//     const page = parseInt(this.props.match.params.page, 10)\n\n//     const skip = (page - 1) * LINKS_PER_PAGE\n//     const first = LINKS_PER_PAGE\n//     const orderBy = 'createdAt_DESC'\n//     return { first, skip, orderBy }\n//   }\n\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1 className='display-4 my-3'>Beers du Quebec </h1>\n\n//         <Query query={BEERS_QUERY} variables={this._getQueryVariables}>\n//           {({ loading, error, data }) => {\n//             if (loading) return <h4>Loading...</h4>\n//             if (error) console.log(error)\n\n//             return (\n//               <Fragment>\n//                 {data.beers.map((beer) => (\n//                   <BeerItem\n//                     key={beer.name}\n//                     beer={beer}\n//                     forPafination={this._forPafination}\n//                   />\n//                 ))}\n//               </Fragment>\n//             )\n//           }}\n//         </Query>\n//       </Fragment>\n//     )\n//   }\n// }\n\nexport default Beers\n"]},"metadata":{},"sourceType":"module"}