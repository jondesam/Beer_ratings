{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/src/components/Beers.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query BeersQuery {\\n    beers {\\n      abv\\n      available\\n      brewery\\n      ibu\\n      link\\n      name\\n      price\\n      ratings {\\n        name\\n        value\\n      }\\n      style\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment, useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport BeerItem from './BeerItem';\nimport axios from 'axios';\n\nvar cors = require('cors'); // const BEERS_QUERY = gql`\n//   query BeersQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {\n//     beers(first: $first, skip: $skip, orderBy: $orderBy) {\n//       abv\n//       available\n//       brewery\n//       ibu\n//       link\n//       name\n//       price\n//       ratings {\n//         name\n//         value\n//       }\n//       style\n//     }\n//   }\n// `\n// Allow cross-origin\n\n\napp.use(cors());\nvar BEERS_QUERY = gql(_templateObject()); // 'https://jsonplaceholder.typicode.com/posts'\n// const LINKS_PER_PAGE = 5\n\nvar Beers = function Beers() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(10),\n      _useState8 = _slicedToArray(_useState7, 1),\n      postsPerPage = _useState8[0];\n\n  useEffect(function () {\n    var fetchPosts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return axios.get('http://144.217.90.245:8080/graphql', {\n                  headers: {\n                    accept: 'application/json',\n                    'content-type': 'application/json'\n                  },\n                  body: '{\"query\":\"query {\\\\n  beers {\\\\n    style\\\\n   abv\\\\n available\\\\n    brewery\\\\n    ibu\\\\n    name\\\\n    link\\\\n   price\\\\n    ratings { \\\\n      name\\\\n      value\\\\n    }\\\\n  }\\\\n}\",\"variables\":{}}',\n                  method: 'POST'\n                });\n\n              case 3:\n                res = _context.sent;\n                setPosts(res.data);\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []);\n  console.log(posts);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 my-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Beers du Quebec \"), /*#__PURE__*/React.createElement(Query, {\n    query: BEERS_QUERY,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error,\n        data = _ref2.data;\n    if (loading) return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n    if (error) console.log(error);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, data.beers.map(function (beer) {\n      return /*#__PURE__*/React.createElement(BeerItem, {\n        key: beer.name,\n        beer: beer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      });\n    }));\n  }));\n}; // export class Beers extends Component {\n//   _forPafination = (store) => {\n//     const isNewPage = this.props.location.pathname.includes('new')\n//     const page = parseInt(this.props.match.params.page, 10)\n//     const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\n//     const first = isNewPage ? LINKS_PER_PAGE : 100\n//     const orderBy = isNewPage ? 'createdAt_DESC' : null\n//     const data = store.readQuery({\n//       query: BEERS_QUERY,\n//       variables: { first, skip, orderBy },\n//     })\n//     store.writeQuery({ query: BEERS_QUERY, data })\n//   }\n//   _getQueryVariables = () => {\n//     const page = parseInt(this.props.match.params.page, 10)\n//     const skip = (page - 1) * LINKS_PER_PAGE\n//     const first = LINKS_PER_PAGE\n//     const orderBy = 'createdAt_DESC'\n//     return { first, skip, orderBy }\n//   }\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1 className='display-4 my-3'>Beers du Quebec </h1>\n//         <Query query={BEERS_QUERY} variables={this._getQueryVariables}>\n//           {({ loading, error, data }) => {\n//             if (loading) return <h4>Loading...</h4>\n//             if (error) console.log(error)\n//             return (\n//               <Fragment>\n//                 {data.beers.map((beer) => (\n//                   <BeerItem\n//                     key={beer.name}\n//                     beer={beer}\n//                     forPafination={this._forPafination}\n//                   />\n//                 ))}\n//               </Fragment>\n//             )\n//           }}\n//         </Query>\n//       </Fragment>\n//     )\n//   }\n// }\n\n\nexport default Beers;","map":{"version":3,"sources":["/Users/jonhyun/Desktop/Dev/BeerMontreal/client/src/components/Beers.js"],"names":["React","Component","Fragment","useState","useEffect","gql","Query","BeerItem","axios","cors","require","app","use","BEERS_QUERY","Beers","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","get","headers","accept","body","method","res","data","console","log","error","beers","map","beer","name"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport BeerItem from './BeerItem'\nimport axios from 'axios'\nconst cors = require('cors')\n// const BEERS_QUERY = gql`\n//   query BeersQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {\n//     beers(first: $first, skip: $skip, orderBy: $orderBy) {\n//       abv\n//       available\n//       brewery\n//       ibu\n//       link\n//       name\n//       price\n//       ratings {\n//         name\n//         value\n//       }\n//       style\n//     }\n//   }\n// `\n// Allow cross-origin\napp.use(cors())\nconst BEERS_QUERY = gql`\n  query BeersQuery {\n    beers {\n      abv\n      available\n      brewery\n      ibu\n      link\n      name\n      price\n      ratings {\n        name\n        value\n      }\n      style\n    }\n  }\n`\n\n// 'https://jsonplaceholder.typicode.com/posts'\n// const LINKS_PER_PAGE = 5\n\nconst Beers = () => {\n  const [posts, setPosts] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage] = useState(10)\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true)\n      const res = await axios.get('http://144.217.90.245:8080/graphql', {\n        headers: {\n          accept: 'application/json',\n          'content-type': 'application/json',\n        },\n        body:\n          '{\"query\":\"query {\\\\n  beers {\\\\n    style\\\\n   abv\\\\n available\\\\n    brewery\\\\n    ibu\\\\n    name\\\\n    link\\\\n   price\\\\n    ratings { \\\\n      name\\\\n      value\\\\n    }\\\\n  }\\\\n}\",\"variables\":{}}',\n\n        method: 'POST',\n      })\n      setPosts(res.data)\n      setLoading(false)\n    }\n\n    fetchPosts()\n  }, [])\n\n  console.log(posts)\n  return (\n    <Fragment>\n      <h1 className='display-4 my-3'>Beers du Quebec </h1>\n\n      <Query query={BEERS_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4>Loading...</h4>\n          if (error) console.log(error)\n\n          return (\n            <Fragment>\n              {data.beers.map((beer) => (\n                <BeerItem key={beer.name} beer={beer} />\n              ))}\n            </Fragment>\n          )\n        }}\n      </Query>\n    </Fragment>\n  )\n}\n\n// export class Beers extends Component {\n//   _forPafination = (store) => {\n//     const isNewPage = this.props.location.pathname.includes('new')\n//     const page = parseInt(this.props.match.params.page, 10)\n\n//     const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\n//     const first = isNewPage ? LINKS_PER_PAGE : 100\n//     const orderBy = isNewPage ? 'createdAt_DESC' : null\n\n//     const data = store.readQuery({\n//       query: BEERS_QUERY,\n//       variables: { first, skip, orderBy },\n//     })\n\n//     store.writeQuery({ query: BEERS_QUERY, data })\n//   }\n\n//   _getQueryVariables = () => {\n//     const page = parseInt(this.props.match.params.page, 10)\n\n//     const skip = (page - 1) * LINKS_PER_PAGE\n//     const first = LINKS_PER_PAGE\n//     const orderBy = 'createdAt_DESC'\n//     return { first, skip, orderBy }\n//   }\n\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1 className='display-4 my-3'>Beers du Quebec </h1>\n\n//         <Query query={BEERS_QUERY} variables={this._getQueryVariables}>\n//           {({ loading, error, data }) => {\n//             if (loading) return <h4>Loading...</h4>\n//             if (error) console.log(error)\n\n//             return (\n//               <Fragment>\n//                 {data.beers.map((beer) => (\n//                   <BeerItem\n//                     key={beer.name}\n//                     beer={beer}\n//                     forPafination={this._forPafination}\n//                   />\n//                 ))}\n//               </Fragment>\n//             )\n//           }}\n//         </Query>\n//       </Fragment>\n//     )\n//   }\n// }\n\nexport default Beers\n"]},"metadata":{},"sourceType":"module"}