{"ast":null,"code":"import _classCallCheck from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _toConsumableArray from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/jonhyun/Desktop/Dev/BeerMontreal/client/src/components/Beers.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query BeersQuery(\\\"Problem here?\\\") {\\n    beers {\\n      abv\\n      available\\n      brewery\\n      ibu\\n      link\\n      name\\n      price\\n      ratings {\\n        name\\n        value\\n      }\\n      style\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment, useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport BeerItem from './BeerItem';\nimport axios from 'axios';\nimport Pagination from './Pagination';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nvar BEERS_QUERY = gql(_templateObject()) // const Beers = () => {\n//   return (\n//     <Fragment>\n//       <h1 className='display-4 my-3'>Beers du Quebec </h1>\n//       <Query query={BEERS_QUERY}>\n//         {({ loading, error, data, fetchMore }) => {\n//           if (loading) return <h4>Loading...</h4>\n//           if (error) console.log(error)\n//           console.log('data :', data)\n//           return (\n//             <Fragment>\n//               {data.beers.map((beer) => (\n//                 <BeerItem key={beer.name} beer={beer} />\n//               ))}\n//             </Fragment>\n//           )\n//         }}\n//       </Query>\n//     </Fragment>\n//   )\n// }\n;\n\n/*#__PURE__*/\nReact.createElement(Feed, {\n  entries: data.feed || [],\n  onLoadMore: function onLoadMore() {\n    return fetchMore({\n      variables: {\n        offset: data.feed.length\n      },\n      updateQuery: function updateQuery(prev, _ref) {\n        var fetchMoreResult = _ref.fetchMoreResult;\n        if (!fetchMoreResult) return prev;\n        return Object.assign({}, prev, {\n          feed: [].concat(_toConsumableArray(prev.feed), _toConsumableArray(fetchMoreResult.feed))\n        });\n      }\n    });\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 2\n  }\n});\n\nvar FeedWithData = function FeedWithData(_ref2) {\n  var match = _ref2.match;\n  return /*#__PURE__*/React.createElement(Query, {\n    query: FEED_QUERY,\n    variables: {\n      type: match.params.type.toUpperCase() || 'TOP',\n      offset: 0,\n      limit: 10\n    },\n    fetchPolicy: \"cache-and-network\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, function (_ref3) {\n    var data = _ref3.data,\n        fetchMore = _ref3.fetchMore;\n    return /*#__PURE__*/React.createElement(Feed, {\n      entries: data.feed || [],\n      onLoadMore: function onLoadMore() {\n        return fetchMore({\n          variables: {\n            offset: data.feed.length\n          },\n          updateQuery: function updateQuery(prev, _ref4) {\n            var fetchMoreResult = _ref4.fetchMoreResult;\n            if (!fetchMoreResult) return prev;\n            return Object.assign({}, prev, {\n              feed: [].concat(_toConsumableArray(prev.feed), _toConsumableArray(fetchMoreResult.feed))\n            });\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    });\n  });\n};\n\nexport var Beers = /*#__PURE__*/function (_Component) {\n  _inherits(Beers, _Component);\n\n  var _super = _createSuper(Beers);\n\n  function Beers() {\n    var _this2;\n\n    _classCallCheck(this, Beers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _this2._forPafination = function (store) {\n      var isNewPage = _this2.props.location.pathname.includes('new');\n\n      var page = parseInt(_this2.props.match.params.page, 10);\n      var skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0;\n      var first = isNewPage ? LINKS_PER_PAGE : 100;\n      var orderBy = isNewPage ? 'createdAt_DESC' : null;\n      var data = store.readQuery({\n        query: BEERS_QUERY,\n        variables: {\n          first,\n          skip,\n          orderBy\n        }\n      });\n      store.writeQuery({\n        query: BEERS_QUERY,\n        data\n      });\n    };\n\n    _this2._getQueryVariables = function () {\n      var page = parseInt(_this2.props.match.params.page, 10);\n      var skip = (page - 1) * LINKS_PER_PAGE;\n      var first = LINKS_PER_PAGE;\n      var orderBy = 'createdAt_DESC';\n      return {\n        first,\n        skip,\n        orderBy\n      };\n    };\n\n    return _this2;\n  }\n\n  _createClass(Beers, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"display-4 my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, \"Beers du Quebec \"), /*#__PURE__*/React.createElement(Query, {\n        query: BEERS_QUERY,\n        variables: this._getQueryVariables,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, function (_ref5) {\n        var loading = _ref5.loading,\n            error = _ref5.error,\n            data = _ref5.data;\n        if (loading) return /*#__PURE__*/React.createElement(\"h4\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }\n        }, \"Loading...\");\n        if (error) console.log(error);\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }\n        }, data.beers.map(function (beer) {\n          return /*#__PURE__*/React.createElement(BeerItem, {\n            key: beer.name,\n            beer: beer,\n            forPafination: _this3._forPafination,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }\n          });\n        }));\n      }));\n    }\n  }]);\n\n  return Beers;\n}(Component); // export default Beers\n\n{}\n/* <Pagination\npostsPerPage={postsPerPage}\ntotalPosts={posts.length}\npaginate={paginate}\n/> */\n// const Beers = () => {\n//   const [posts, setPosts] = useState([])\n//   const [loading, setLoading] = useState(false)\n//   const [currentPage, setCurrentPage] = useState(1)\n//   const [postsPerPage] = useState(10)\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       setLoading(true)\n//       // const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\n//       // setPosts(res.data)\n//       setLoading(false)\n//     }\n//     fetchPosts()\n//   }, [])\n//   // console.log(posts)\n//   // Get current posts\n//   const indexOfLastPost = currentPage * postsPerPage\n//   const indexOfFirstPost = indexOfLastPost - postsPerPage\n//   // Change page\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber)\n//   return (\n//     <Fragment>\n//       <h1 className='display-4 my-3'>Beers du Quebec </h1>\n//       <Query query={BEERS_QUERY}>\n//         {({ loading, error, data }) => {\n//           if (loading) return <h4>Loading...</h4>\n//           if (error) console.log(error)\n//           const currentPosts = data.beers.slice(\n//             indexOfFirstPost,\n//             indexOfLastPost\n//           )\n//           console.log('data.beers in Querry', data.beers)\n//           setPosts(data.beers)\n//           return (\n//             <Fragment>\n//               {currentPosts.map((beer) => (\n//                 <BeerItem key={beer.name} beer={beer} />\n//               ))}\n//             </Fragment>\n//           )\n//         }}\n//       </Query>\n//     </Fragment>\n//   )\n// }\n\n;\n\n/*#__PURE__*/\nReact.createElement(\"button\", {\n  type: \"button\",\n  onClick: function onClick() {\n    return fetchMore({\n      variables: {\n        cursor: data\n      },\n      updateQuery\n    });\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 2\n  }\n}, \"More\");\n'https://jsonplaceholder.typicode.com/posts';\nvar LINKS_PER_PAGE = 5;","map":{"version":3,"sources":["/Users/jonhyun/Desktop/Dev/BeerMontreal/client/src/components/Beers.js"],"names":["React","Component","Fragment","useState","useEffect","gql","Query","BeerItem","axios","Pagination","InfiniteScroll","BEERS_QUERY","data","feed","fetchMore","variables","offset","length","updateQuery","prev","fetchMoreResult","Object","assign","FeedWithData","match","FEED_QUERY","type","params","toUpperCase","limit","Beers","_forPafination","store","isNewPage","props","location","pathname","includes","page","parseInt","skip","LINKS_PER_PAGE","first","orderBy","readQuery","query","writeQuery","_getQueryVariables","loading","error","console","log","beers","map","beer","name","cursor"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport BeerItem from './BeerItem'\nimport axios from 'axios'\nimport Pagination from './Pagination'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nconst BEERS_QUERY = gql`\n  query BeersQuery(\"Problem here?\") {\n    beers {\n      abv\n      available\n      brewery\n      ibu\n      link\n      name\n      price\n      ratings {\n        name\n        value\n      }\n      style\n    }\n  }\n`\n\n// const Beers = () => {\n//   return (\n//     <Fragment>\n//       <h1 className='display-4 my-3'>Beers du Quebec </h1>\n\n//       <Query query={BEERS_QUERY}>\n//         {({ loading, error, data, fetchMore }) => {\n//           if (loading) return <h4>Loading...</h4>\n//           if (error) console.log(error)\n//           console.log('data :', data)\n//           return (\n//             <Fragment>\n//               {data.beers.map((beer) => (\n//                 <BeerItem key={beer.name} beer={beer} />\n//               ))}\n//             </Fragment>\n//           )\n//         }}\n//       </Query>\n//     </Fragment>\n//   )\n// }\n\n;<Feed\n  entries={data.feed || []}\n  onLoadMore={() =>\n    fetchMore({\n      variables: {\n        offset: data.feed.length,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev\n        return Object.assign({}, prev, {\n          feed: [...prev.feed, ...fetchMoreResult.feed],\n        })\n      },\n    })\n  }\n/>\nconst FeedWithData = ({ match }) => (\n  <Query\n    query={FEED_QUERY}\n    variables={{\n      type: match.params.type.toUpperCase() || 'TOP',\n      offset: 0,\n      limit: 10,\n    }}\n    fetchPolicy='cache-and-network'\n  >\n    {({ data, fetchMore }) => (\n      <Feed\n        entries={data.feed || []}\n        onLoadMore={() =>\n          fetchMore({\n            variables: {\n              offset: data.feed.length,\n            },\n            updateQuery: (prev, { fetchMoreResult }) => {\n              if (!fetchMoreResult) return prev\n              return Object.assign({}, prev, {\n                feed: [...prev.feed, ...fetchMoreResult.feed],\n              })\n            },\n          })\n        }\n      />\n    )}\n  </Query>\n)\n\nexport class Beers extends Component {\n  _forPafination = (store) => {\n    const isNewPage = this.props.location.pathname.includes('new')\n    const page = parseInt(this.props.match.params.page, 10)\n\n    const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\n    const first = isNewPage ? LINKS_PER_PAGE : 100\n    const orderBy = isNewPage ? 'createdAt_DESC' : null\n\n    const data = store.readQuery({\n      query: BEERS_QUERY,\n      variables: { first, skip, orderBy },\n    })\n\n    store.writeQuery({ query: BEERS_QUERY, data })\n  }\n\n  _getQueryVariables = () => {\n    const page = parseInt(this.props.match.params.page, 10)\n\n    const skip = (page - 1) * LINKS_PER_PAGE\n    const first = LINKS_PER_PAGE\n    const orderBy = 'createdAt_DESC'\n    return { first, skip, orderBy }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1 className='display-4 my-3'>Beers du Quebec </h1>\n\n        <Query query={BEERS_QUERY} variables={this._getQueryVariables}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>\n            if (error) console.log(error)\n\n            return (\n              <Fragment>\n                {data.beers.map((beer) => (\n                  <BeerItem\n                    key={beer.name}\n                    beer={beer}\n                    forPafination={this._forPafination}\n                  />\n                ))}\n              </Fragment>\n            )\n          }}\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\n// export default Beers\n\n{\n  /* <Pagination\npostsPerPage={postsPerPage}\ntotalPosts={posts.length}\npaginate={paginate}\n/> */\n}\n\n// const Beers = () => {\n//   const [posts, setPosts] = useState([])\n//   const [loading, setLoading] = useState(false)\n//   const [currentPage, setCurrentPage] = useState(1)\n//   const [postsPerPage] = useState(10)\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       setLoading(true)\n//       // const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\n//       // setPosts(res.data)\n//       setLoading(false)\n//     }\n\n//     fetchPosts()\n//   }, [])\n\n//   // console.log(posts)\n\n//   // Get current posts\n//   const indexOfLastPost = currentPage * postsPerPage\n//   const indexOfFirstPost = indexOfLastPost - postsPerPage\n\n//   // Change page\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n//   return (\n//     <Fragment>\n//       <h1 className='display-4 my-3'>Beers du Quebec </h1>\n\n//       <Query query={BEERS_QUERY}>\n//         {({ loading, error, data }) => {\n//           if (loading) return <h4>Loading...</h4>\n//           if (error) console.log(error)\n\n//           const currentPosts = data.beers.slice(\n//             indexOfFirstPost,\n//             indexOfLastPost\n//           )\n//           console.log('data.beers in Querry', data.beers)\n//           setPosts(data.beers)\n\n//           return (\n//             <Fragment>\n//               {currentPosts.map((beer) => (\n//                 <BeerItem key={beer.name} beer={beer} />\n//               ))}\n//             </Fragment>\n//           )\n//         }}\n//       </Query>\n//     </Fragment>\n//   )\n// }\n\n;<button\n  type='button'\n  onClick={() =>\n    fetchMore({\n      variables: {\n        cursor: data,\n      },\n      updateQuery,\n    })\n  }\n>\n  More\n</button>\n;('https://jsonplaceholder.typicode.com/posts')\nconst LINKS_PER_PAGE = 5\n"]},"metadata":{},"sourceType":"module"}